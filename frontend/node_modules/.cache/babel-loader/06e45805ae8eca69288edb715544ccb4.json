{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _handleOriginalResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  register(password, email) {\n    return fetch(`${this._url}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(this._handleOriginalResponse);\n  }\n\n  authorize(password, email) {\n    return fetch(`${this._url}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(this._handleOriginalResponse);\n  }\n\n  checkToken(token) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: { ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._handleOriginalResponse);\n  }\n\n}\n\nconst auth = new Auth({\n  baseUrl: \"https://auth.nomoreparties.co\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport { auth };","map":{"version":3,"sources":["/Users/vsevolodmarkov/Documents/dev/react-mesto-api-full/frontend/src/utils/auth.js"],"names":["Auth","constructor","options","_url","baseUrl","_headers","headers","_handleOriginalResponse","res","ok","Promise","reject","status","json","register","password","email","fetch","method","body","JSON","stringify","then","authorize","checkToken","token","Authorization","auth"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,IAAL,GAAYD,OAAO,CAACE,OAApB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;AACD;;AAEDC,EAAAA,uBAAuB,CAACC,GAAD,EAAM;AAC3B,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,aAAOC,OAAO,CAACC,MAAR,CAAgB,UAASH,GAAG,CAACI,MAAO,EAApC,CAAP;AACD;;AACD,WAAOJ,GAAG,CAACK,IAAJ,EAAP;AACD;;AAEDC,EAAAA,QAAQ,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACxB,WAAOC,KAAK,CAAE,GAAE,KAAKd,IAAK,SAAd,EAAwB;AAClCe,MAAAA,MAAM,EAAE,MAD0B;AAElCZ,MAAAA,OAAO,EAAE,KAAKD,QAFoB;AAGlCc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,QAAAA,QAAQ,EAAEA,QADS;AAEnBC,QAAAA,KAAK,EAAEA;AAFY,OAAf;AAH4B,KAAxB,CAAL,CAOJM,IAPI,CAOC,KAAKf,uBAPN,CAAP;AAQD;;AAEDgB,EAAAA,SAAS,CAACR,QAAD,EAAWC,KAAX,EAAkB;AACzB,WAAOC,KAAK,CAAE,GAAE,KAAKd,IAAK,SAAd,EAAwB;AAClCe,MAAAA,MAAM,EAAE,MAD0B;AAElCZ,MAAAA,OAAO,EAAE,KAAKD,QAFoB;AAGlCc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,QAAAA,QAAQ,EAAEA,QADS;AAEnBC,QAAAA,KAAK,EAAEA;AAFY,OAAf;AAH4B,KAAxB,CAAL,CAOJM,IAPI,CAOC,KAAKf,uBAPN,CAAP;AAQD;;AAEDiB,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,WAAOR,KAAK,CAAE,GAAE,KAAKd,IAAK,WAAd,EAA0B;AACpCe,MAAAA,MAAM,EAAE,KAD4B;AAEpCZ,MAAAA,OAAO,EAAE,EACP,GAAG,KAAKD,QADD;AAEPqB,QAAAA,aAAa,EAAG,UAASD,KAAM;AAFxB;AAF2B,KAA1B,CAAL,CAMJH,IANI,CAMC,KAAKf,uBANN,CAAP;AAOD;;AA3CQ;;AA8CX,MAAMoB,IAAI,GAAG,IAAI3B,IAAJ,CAAS;AACpBI,EAAAA,OAAO,EAAE,+BADW;AAEpBE,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFW,CAAT,CAAb;AAOA,SAASqB,IAAT","sourcesContent":["class Auth {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _handleOriginalResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  register(password, email) {\n    return fetch(`${this._url}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password: password,\n        email: email,\n      }),\n    }).then(this._handleOriginalResponse);\n  }\n\n  authorize(password, email) {\n    return fetch(`${this._url}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password: password,\n        email: email,\n      }),\n    }).then(this._handleOriginalResponse)\n  }\n\n  checkToken(token) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(this._handleOriginalResponse);\n  }\n}\n\nconst auth = new Auth({\n  baseUrl: \"https://auth.nomoreparties.co\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport { auth };\n"]},"metadata":{},"sourceType":"module"}